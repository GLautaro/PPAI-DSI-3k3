///////////////////////////////////////////////////////////
//  HistorialEstadoTicket.cs
//  Implementation of the Class HistorialEstadoTicket
//  Generated by Enterprise Architect
//  Created on:      13-Nov-2019 18:51:52
//  Original author: Lucas
///////////////////////////////////////////////////////////
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System;
using System.Collections.Generic;
using System.Linq;

namespace RealizacionCU22.Modelo
{
    [Table("historial_estado_ticket")]
    public class HistorialEstadoTicket : IObjetoPersistente
    {
        [Key]
        public int Id { get; set; }
        public virtual EstadoTicket Estado { get; set; }
        public DateTime FechaHoraDesde { get; set; }
        public DateTime? FechaHoraHasta { get; set; }
        public Comentario Comentario { get; set; }

        public HistorialEstadoTicket()
        {

        }

        public void calcularDuracionPorEstado()
        {

        }

        public void calcularHorasConsumidas()
        {

        }

        public bool EsEnEjecucion()
        {
            return Estado.esEnEjecucion();
        }

        public bool EsEstadoMasAntiguoYEnEjecucion(ICollection<HistorialEstadoTicket> historialEstados)
        {
            HistorialEstadoTicket historialMasAntiguo = historialEstados.Where(x => x.EsEnEjecucion()).OrderByDescending(x => x.FechaHoraDesde).First();
            return historialMasAntiguo == this;
        }

        public bool EsEstadoMasReciente(ICollection<HistorialEstadoTicket> historialEstados)
        {
            HistorialEstadoTicket historialMasAntiguo = historialEstados.OrderByDescending(x => x.FechaHoraDesde).Last();
            return historialMasAntiguo == this;
        }

        public bool esEstadoMasRecienteYCerrada(ICollection<HistorialEstadoTicket> historialEstados)
        {
            return EsEstadoMasReciente(historialEstados) && Estado.esCerrado();
        }

    }
}
//end HistorialEstadoTicket